---
description: Guide for using Tailwind CSS v4 instead of v3.x
globs: *.tsx
alwaysApply: false
---

# Tailwind CSS v4

## Theme Configuration

- **CSS theme variables**: All design tokens are available as CSS variables

  - Namespace format: `--category-name` (e.g., `--color-blue-500`, `--font-sans`)
  - Access in CSS: `var(--color-blue-500)`
  - Available namespaces:
    - `--color-*` : Color utilities like `bg-red-500` and `text-sky-300`
    - `--font-*` : Font family utilities like `font-sans`
    - `--text-*` : Font size utilities like `text-xl`
    - `--font-weight-*` : Font weight utilities like `font-bold`
    - `--tracking-*` : Letter spacing utilities like `tracking-wide`
    - `--leading-*` : Line height utilities like `leading-tight`
    - `--breakpoint-*` : Responsive breakpoint variants like `sm:*`
    - `--container-*` : Container query variants like `@sm:*` and size utilities like `max-w-md`
    - `--spacing-*` : Spacing and sizing utilities like `px-4` and `max-h-16`
    - `--radius-*` : Border radius utilities like `rounded-sm`
    - `--shadow-*` : Box shadow utilities like `shadow-md`
    - `--inset-shadow-*` : Inset box shadow utilities like `inset-shadow-xs`
    - `--drop-shadow-*` : Drop shadow filter utilities like `drop-shadow-md`
    - `--blur-*` : Blur filter utilities like `blur-md`
    - `--perspective-*` : Perspective utilities like `perspective-near`
    - `--aspect-*` : Aspect ratio utilities like `aspect-video`
    - `--ease-*` : Transition timing function utilities like `ease-out`
    - `--animate-*` : Animation utilities like `animate-spin`

- **Simplified theme configuration**: Many utilities no longer need theme configuration

  - Utilities like `grid-cols-12`, `z-40`, and `opacity-70` work without configuration
  - Data attributes like `data-selected:opacity-100` don't need configuration

- **Dynamic spacing scale**: Derived from a single spacing value

  - Default: `--spacing: 0.25rem`
  - Every multiple of the base value is available (e.g., `mt-21` works automatically)

- **Overriding theme namespaces**:
  - Override entire namespace: `--font-*: initial;`
  - Override entire theme: `--*: initial;`

## New Features

- **Container query support**: Built-in now, no plugin needed

  - `@container` for container context
  - `@sm:`, `@md:`, etc. for container-based breakpoints
  - `@max-md:` for max-width container queries
  - Combine with `@min-md:@max-xl:hidden` for ranges

- **3D transforms**:

  - `transform-3d` enables 3D transforms
  - `rotate-x-*`, `rotate-y-*`, `rotate-z-*` for 3D rotation
  - `scale-z-*` for z-axis scaling
  - `translate-z-*` for z-axis translation
  - `perspective-*` utilities (`perspective-near`, `perspective-distant`, etc.)
  - `perspective-origin-*` utilities
  - `backface-visible` and `backface-hidden`

- **Gradient enhancements**:

  - Linear gradient angles: `bg-linear-45` (renamed from `bg-gradient-*`)
  - Gradient interpolation: `bg-linear-to-r/oklch`, `bg-linear-to-r/srgb`
  - Conic and radial gradients: `bg-conic`, `bg-radial-[at_25%_25%]`

- **Shadow enhancements**:

  - `inset-shadow-*` and `inset-ring-*` utilities
  - Can be composed with regular `shadow-*` and `ring-*`

- **New CSS property utilities**:
  - `field-sizing-content` for auto-resizing textareas
  - `scheme-light`, `scheme-dark` for `color-scheme` property
  - `font-stretch-*` utilities for variable fonts

## New Variants

- **Composable variants**: Chain variants together

  - Example: `group-has-data-potato:opacity-100`

- **New variants**:
  - `starting` variant for `@starting-style` transitions
  - `not-*` variant for `:not()` pseudo-class
  - `inert` variant for `inert` attribute
  - `nth-*` variants (`nth-3:`, `nth-last-5:`, `nth-of-type-4:`, `nth-last-of-type-6:`)
  - `in-*` variant (like `group-*` but without adding `group` class)
  - `open` variant now supports `:popover-open`
  - `**` variant for targeting all descendants

## Breaking Changes

- **Removed deprecated utilities**:

  - `bg-opacity-*` → Use `bg-black/50` instead
  - `text-opacity-*` → Use `text-black/50` instead
  - And others: `border-opacity-*`, `divide-opacity-*`, etc.

- **Renamed utilities**:

  - `shadow-sm` → `shadow-xs` (and `shadow` → `shadow-sm`)
  - `drop-shadow-sm` → `drop-shadow-xs` (and `drop-shadow` → `drop-shadow-sm`)
  - `blur-sm` → `blur-xs` (and `blur` → `blur-sm`)
  - `rounded-sm` → `rounded-xs` (and `rounded` → `rounded-sm`)
  - `outline-none` → `outline-hidden` (for the old behavior)

- **Default style changes**:

  - Default border color is now `currentColor` (was `gray-200`)
  - Default `ring` width is now 1px (was 3px)
  - Placeholder text now uses current color at 50% opacity (was `gray-400`)
  - Hover styles only apply on devices that support hover (`@media (hover: hover)`)

- **Syntax changes**:
  - CSS variables in arbitrary values: `bg-(--brand-color)` instead of `bg-[--brand-color]`
  - Stacked variants now apply left-to-right (not right-to-left)
  - Use CSS variables instead of `theme()` function

# Rules

<version>1.0.0</version>

## Context

- When using Tailwind CSS v4 in components and configuration
- When setting up package dependencies and build configuration

## Requirements

- Use modern class syntax for opacity and colors (`bg-black/50` instead of `bg-opacity-50`)
- Apply renamed utility classes (`shadow-xs` instead of `shadow-sm`, etc.)
- Leverage new 3D transform utilities when needed
- Implement composable variants with proper chaining syntax
- Use CSS variables for theme values in JavaScript when necessary

## Examples

<example>
```tsx
// Component using Tailwind CSS v4 features
function Card({ highlighted = false }) {
  return (
    <div className="@container">
      <div className="bg-white/90 shadow-sm rounded-md p-4 
                     @md:p-6 @lg:p-8
                     hover:shadow-md transition-all
                     data-highlighted:ring-2 data-highlighted:ring-primary-500"
           data-highlighted={highlighted ? "" : undefined}>
        <h3 className="text-lg font-medium @md:text-xl">Card Title</h3>
        <div className="mt-2 text-gray-500/80">
          Card content with modern opacity syntax
        </div>
      </div>
    </div>
  );
}
```
This component correctly uses container queries, modern opacity syntax, and data attribute variants.
</example>

<example type="invalid">
```tsx
// Outdated component
function Card({ highlighted = false }) {
  return (
    <div>
      <div className="bg-white bg-opacity-90 shadow-sm rounded-sm p-4 
                     sm:p-6 lg:p-8
                     hover:shadow group"
           data-highlighted={highlighted ? true : false}>
        <h3 className="text-lg font-medium sm:text-xl">Card Title</h3>
        <div className="mt-2 text-gray-500 text-opacity-80 group-hover:text-opacity-100">
          Card content with outdated opacity syntax
        </div>
      </div>
    </div>
  );
}
```
This uses outdated Tailwind v3 syntax with separate opacity classes and incorrect data attribute usage.
</example>
